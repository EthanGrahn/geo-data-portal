<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <description>Geo Data Portal Web Component</description>
    <display-name>Geo Data Portal Web Component {Owner: NB, Coder: IS, TK, RZ, CWG}</display-name>
    <!-- Login Related Configuration For config.jsp -->
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>Configuration Area</realm-name>
    </login-config>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Protected Resource</web-resource-name>
            <url-pattern>/config.jsp</url-pattern>
            <url-pattern>/blacklist_config.jsp</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>manager</role-name>
        </auth-constraint>
    </security-constraint>
    
    <error-page>
        <error-code>404</error-code>
        <location>/jsp/error/error404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/jsp/error/error500.jsp</location>
    </error-page>
    
    <filter>
        <description>Returns the XClientIP Header on getRemoteAddr()</description>
        <filter-name>XClientIPFilter</filter-name>
        <filter-class>gov.usgs.service.XClientIPFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>XClientIPFilter</filter-name>
        <url-pattern>/proxy/*</url-pattern>
    </filter-mapping>
    <filter>
        <description>Returns the X-REQUEST-URL Header on getRequestURL()</description>
        <filter-name>URLFilter</filter-name>
        <filter-class>gov.usgs.service.URLFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>URLFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <listener>
        <description>Allows dynamic Log4J log level changes via JMX</description>
        <listener-class>gov.usgs.cida.jmx.log4j.JMXLog4JLoggerServletContextListener</listener-class>
    </listener>
    
    <!-- Feedback services -->
    <servlet>
        <servlet-name>ContactService</servlet-name>
        <servlet-class>gov.usgs.service.ContactService</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>SecurityImageGenerator</servlet-name>
        <servlet-class>gov.usgs.service.SecurityImageGenerator</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>SecurityImageGenerator</servlet-name>
        <url-pattern>/securityimage/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ContactService</servlet-name>
        <url-pattern>/service/contact/*</url-pattern>
    </servlet-mapping>
    
    
    <servlet>
        <servlet-name>OWSProxy</servlet-name>
        <servlet-class>gov.usgs.service.OWSProxyServletX</servlet-class>
        <!--        <servlet-class>gov.usgs.service.OWSProxyServlet</servlet-class>-->
        <init-param>
            <param-name>getRequestURIKey</param-name>
            <param-value>/proxy/*</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>OWSProxy</servlet-name>
        <url-pattern>/proxy/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <description>
            Used for uploading shapefiles to our WPS server
        </description>
        <servlet-name>PropertiesServlet</servlet-name>
        <servlet-class>gov.usgs.service.PropertiesServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>PropertiesServlet</servlet-name>
        <url-pattern>/PropertiesServlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <description>
            Handles blacklist management
        </description>
        <servlet-name>BlacklistServlet</servlet-name>
        <servlet-class>gov.usgs.cida.blacklist.BlacklistServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>BlacklistServlet</servlet-name>
        <url-pattern>/blacklist</url-pattern>
    </servlet-mapping>
    
    <!-- Upload Servlet -->
    <servlet>
        <servlet-name>shapefile-upload-servlet</servlet-name>
        <servlet-class>gov.usgs.cida.geoutils.geoserver.servlet.ShapefileUploadServlet</servlet-class>
        <!-- 
        Used for reading JNDI variables. All JNDI variables used for this application 
        will be prefixed with this parameter. Example: 
        <Environment name="coastal-hazards.max.upload.file.size" type="java.lang.String" value="20000" />
        -->
        <init-param>
            <param-name>application.name</param-name>
            <param-value>gdp</param-value>
        </init-param>
        <!--
        Used to limit the size of incoming files measured in bytes. [Optional]
        0 = Integer.MAX_VALUE
        -->
        <init-param>
            <param-name>max.upload.file.size</param-name>
            <param-value>0</param-value>
        </init-param>
        <!--
        The URL of the geoserver that will be used for uploading.
        -->
        <init-param>
            <param-name>geoserver.endpoint</param-name>
            <param-value>http://localhost:8081/geoserver/</param-value>
        </init-param>
        <!--
        The username used to authenticate against when writing against GeoServer.
        -->
        <init-param>
            <param-name>geoserver.username</param-name>
            <param-value>admin</param-value>
        </init-param>
        <!--
        Workspace name that files will be uploaded to by default. [Optional. If this 
        parameter is not provided here, in JNDI and during the request, upload will fail]
        -->
        <init-param>
            <param-name>default.upload.workspace</param-name>
            <param-value>upload</param-value>
        </init-param>
        <!--
        Store name that files will be uploaded to by default. [Optional. If this 
        parameter is not provided here, in JNDI and during the request, upload will fail]
        -->
        <init-param>
            <param-name>default.upload.storename</param-name>
            <param-value></param-value>
        </init-param>
        <!--
        Default SRS is not defined. If a SRS name is not passed to during the 
        request, the request will fail [Optional. If this parameter is not provided 
        here, in JNDI and during the request, upload will fail]
        -->
        <init-param>
            <param-name>default.srs</param-name>
            <param-value>EPSG:4326</param-value>
        </init-param>
        <!--
        The key to search for in the upload form post to find the file 
        [Optional. If this parameter is not provided "qqfile" will be used]
        -->
        <init-param>
            <param-name>filename.param</param-name>
            <param-value></param-value>
        </init-param>
        <!--
        Should the existing layer, if one exists, be overwritten?
        [Optional. If this parameter is not provided "false" will be used]
        **WARNING** Setting this to true may be dangerous since the previous layer
        will be removed prior to a new layer being imported. If the import fails,
        there is no ay to recover the previous layer.
        -->
        <init-param>
            <param-name>overwrite.existing.layer</param-name>
            <param-value></param-value>
        </init-param>
        <!--
        Whether or not to use base CRS if native could not be found. Default true
        [Optional. If this parameter is not provided "true" will be used]
        -->
        <init-param>
            <param-name>use.crs.failover</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
        Reprojection policy for a published layer. One of:
        - reproject - Reproject from native to declared CRS
        - force - Use the declared CRS (ignore native)
        - none - No reprojection (use native CRS)
        [Optional. If this parameter is not provided "reproject" will be used]
        -->
        <init-param>
            <param-name>projection.policy</param-name>
            <param-value>reproject</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>shapefile-upload-servlet</servlet-name>
        <url-pattern>/uploadhandler</url-pattern>
    </servlet-mapping>
    
</web-app>
